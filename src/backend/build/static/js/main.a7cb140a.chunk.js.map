{"version":3,"sources":["frontend/gallery/cover/images/ss-collage.png","frontend/gallery/cover/images/aw-collage.png","frontend/gallery/cover/images/denim-collage.png","frontend/gallery/cover/Cover.js","frontend/shows.js","frontend/gallery/Gallery.js","frontend/details/Details.js","frontend/not-found/NotFound.js","frontend/App.js","frontend/serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Cover","react_default","a","createElement","Link","to","concat","this","props","id","className","src","image","alt","title","React","Component","getShows","name","ssCollage","synopsis","awCollage","details","denimCollage","Gallery","fetch","then","myJson","console","log","map","show","Cover_Cover","key","Details","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","find","match","params","showId","setState","Redirect","NotFound","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_frontend_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7cb140a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ss-collage.ef0557ee.png\";","module.exports = __webpack_public_path__ + \"static/media/aw-collage.81ae0ef1.png\";","module.exports = __webpack_public_path__ + \"static/media/denim-collage.11b40afc.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Cover.css';\n\nexport default class Cover extends React.Component {\n\n    render() {\n        return (\n            <Link to={`/${this.props.id}`} className='cover'>\n                <img src={this.props.image} alt='' />\n                <div className='cover-overlay'>\n                    <h1>{this.props.title}</h1>\n                </div>\n            </Link>\n        )\n    }\n}","\n    \nimport ssCollage from './gallery/cover/images/ss-collage.png';\nimport awCollage from './gallery/cover/images/aw-collage.png';\nimport denimCollage from './gallery/cover/images/denim-collage.png';\n\n\nexport default function getShows() {\n    return [{\n        id: 'ss18',\n        name: 'SS18',\n        image: ssCollage,\n        synopsis: 'Summer Solstice 2018 collection was all about the heat.Fantastically we were blessed with the most incredible summer. This collection has absolutely all the celebration of it and is down way pride to it. The wonderful film is created by Ed Mathews .        Queeny is the model with fantastic crop celebrates the return of the afro.        Short blond hair is a touch of the “Mia Farrow” to it . The interpretation of Parisian girl with the gentle softly waved bob, the freckles as the result of a long hot summer bringing out the glow and the beauty in the face and the skin. Simple blond layered haircut with the touch of pink or touch of salmon in the quality of the hair which is so beautiful.The finish off with the showstop of the return of the perms: bright red hair with softly permed curls (front cover in many countries world wide).'\n    }, {\n        id: 'aw18',\n        name: 'AW18',\n        image: awCollage,\n        details: 'The Winter Solstice 2018. The theme of this collection was wide cross section of the work that we typically do in the salon which is beautiful quality well finished hair, touching different skills that we use in the salon. Skills of the haircuts, the skill of the finishing, the cleanness of the colour - all of these are evident in this Autumn/Winter ‘18 collection . “The inspiration I’ve gone through : the colours are very very clean, very crisp, beautifully presented . It’s expensive quality looking hair.”'\n    }, {\n        id: 'denim18',\n        name: 'Denim18',\n        image: denimCollage,\n        details: 'Denim collection 2018. The summer special collection took 3 of the girls who featured in Winter Solstice collection . We started with the “Double Denim“ summer celebration where we reinvented three different looks. The main inspiration came from the summer fresh feeling set against the very best of the summer expression pictures that David Hockney made while he was living in California.'\n    }];\n}","\nimport React from 'react';\nimport './Gallery.css';\nimport Cover from './cover/Cover';\nimport getShows from '../shows';\n\nexport default class Gallery extends React.Component {\n    \n    componentDidMount() {\n        fetch('/rest/shows')\n            \n            .then(function (myJson) {\n                console.log(myJson);\n            });\n    }\n\n    render() {\n        return (\n            <div className='gallery'>{\n                getShows().map(show => {\n                    return (\n                        <Cover image={show.image} key={show.id}\n                               id={show.id} title={show.title} />\n                    );\n                })\n            }\n            </div>\n        );\n    }\n}","\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport getShows from '../shows';\nimport './Details.css';\n\nexport default class Details extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            show: {}\n        };\n    }\n\n    componentDidMount() {\n        let show = getShows()\n            .find(show => show.id === this.props.match.params.showId);\n        this.setState({ show });\n    }\n\n    render() {\n        let show = this.state.show;\n        return (\n            this.state.show ?\n                <div className='details'>\n                    <h1>{show.title}</h1>\n                    <div className='details-content'>\n                        <h3 className='details-content-synopsis'>\n                            {show.synopsis}\n                        </h3>\n                        <div className='details-content-cover'>\n                            <img src={show.image} alt={show.title} />\n                        </div>\n                    </div>\n                </div> :\n                <Redirect to='/not-found' />\n        )\n    }\n}\n","import React from 'react';\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1>Oooops... this page doesn't exist</h1>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Gallery from './gallery/Gallery';\nimport Details from './details/Details';\nimport NotFound from './not-found/NotFound';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <p className='code'>Jingles Hair education</p>\n          <Switch>\n            <Route exact path='/' component={Gallery} />\n            <Route path='/not-found' component={NotFound} />\n            <Route path='/:showId' component={Details} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './frontend/App';\nimport * as serviceWorker from './frontend/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nif(module.hot) {\n    module.hot.accept();\n}"],"sourceRoot":""}